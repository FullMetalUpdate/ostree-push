#!/usr/bin/python3

from __future__ import print_function

from argparse import ArgumentParser
from enum import Enum
from gi.repository import GLib, Gio, OSTree
from pushlib import *
import random
import struct
import sys

class OSTreeReceiver(object):
    def __init__(self, repopath):
        self.repopath = repopath

        if args.repo is None:
            self.repo = OSTree.Repo.new_default()
        else:
            self.repo = OSTree.Repo.new(Gio.File.new_for_path(self.repopath))
        self.repo.open(None)

        self.writer = PushMessageWriter(sys.stdout.buffer)
        self.reader = PushMessageReader(sys.stdin.buffer)

    def close(self):
        sys.stdout.close()

    def run(self):
        # Send info immediately
        self.writer.send_info(self.repo)

        # Wait for update command
        update_refs = self.reader.receive_update()
        for branch, revs in update_refs.items():
            print('Will update', branch, revs[0], 'to', revs[1],
                  file=sys.stderr)

if __name__ == '__main__':
    aparser = ArgumentParser(description='Receive pushed ostree objects')
    aparser.add_argument('--repo', help='repository path')
    args = aparser.parse_args()

    receiver = OSTreeReceiver(args.repo)
    receiver.run()
